services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway-rag
    ports:
      - "0.0.0.0:8004:8004"
    environment:
      URL_POPULATE: ${URL_POPULATE}
      URL_RETRIEVE: ${URL_RETRIEVE}
      URL_GENERATE: ${URL_GENERATE}

  populate:
    build:
      context: ./populate
      dockerfile: Dockerfile
    container_name: populate-rag
    ports:
      - "0.0.0.0:8001:8001"
    environment:
      CHROMA_ADDRESS: ${CHROMA_ADDRESS}
      CHROMA_PORT: ${CHROMA_PORT}
      CHROMA_DB: ${CHROMA_DB}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL}
      OLLAMA_ADDRESS: ${OLLAMA_ADDRESS}
      OLLAMA_PORT: ${OLLAMA_PORT}

  retrieve:
    build:
      context: ./retrieve
      dockerfile: Dockerfile
    container_name: retrieve-rag
    ports:
      - "0.0.0.0:8002:8002"
    environment:
      CHROMA_ADDRESS: ${CHROMA_ADDRESS}
      CHROMA_PORT: ${CHROMA_PORT}
      CHROMA_DB: ${CHROMA_DB}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL}
      OLLAMA_ADDRESS: ${OLLAMA_ADDRESS}
      OLLAMA_PORT: ${OLLAMA_PORT}

  generate:
    build:
      context: ./generate
      dockerfile: Dockerfile
    container_name: generate-rag
    ports:
      - "0.0.0.0:8003:8003"
    environment:
      OLLAMA_ADDRESS: ${OLLAMA_ADDRESS}
      OLLAMA_PORT: ${OLLAMA_PORT}

  chroma:
    image: chromadb/chroma:0.5.15
    container_name: chroma-rag
    ports:
      - "0.0.0.0:8000:8000"
    volumes:
      - chroma-data:/chromadb/data
    environment:
      - ALLOW_RESET=TRUE
    networks:
      - default

volumes:
  chroma-data:
    driver: local
